{"version":3,"sources":["images/logo.png","components/nav/Nav.js","components/creatingPage/SelectOptions.js","components/creatingPage/AddElements.js","pages/CreatingPage.js","components/documentationRegister/FilterComponent.js","components/documentationRegister/TransmittalPopup.js","components/documentationRegister/TransmittalElement.js","components/documentationRegister/DocumentationNumber.js","components/documentationRegister/DocumentationRow.js","components/documentationRegister/DocumentationWrap.js","pages/DocumentationRegister.js","App.js","index.js"],"names":["module","exports","Nav","state","windowWidth","windowHeight","navCollapse","action","items","document","querySelectorAll","forEach","e","classList","toggle","remove","className","onClick","src","require","alt","exact","to","activeClassName","Component","SelectOptions","packageName","volumeNumber","value","AddElement","number","name","id","disabled","htmlFor","type","CreatingPage","props","createOptions","tab","map","index","key","handlePageForm","target","setState","choosenPackage","choosenRevision","submitPageForm","rev","vol","preventDefault","fetch","method","then","json","window","open","handleAddElementButton","prevState","addedElements","concat","elementType","elementName","elementScale","handleChangeElementTypes","renderAddedElements","AddElements","optionElements","getSelectOptions","bind","data","this","onChange","href","FilterComponent","scrollElement","filterPanel","addEventListener","pageYOffset","add","querySelector","inputHandler","text","date","TransmittalPopup","info","paperDate","eleDate","revision","status","split","placeholder","TransmittalElement","path","DocumentationNumber","code","DocumentationRow","docNameAndCode","row","actionType","makeTransmittals","rowNew","Array","from","splice","DocumentationWrap","createRowElements","elements","all","toUpperCase","includes","filterName","filterDate","DocumentationRegister","documentationAll","handleInputsFilter","getDocumentationData","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99a4c16a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9f2400a3.png\";","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    windowWidth: 0,\r\n    windowHeight: 0,\r\n  };\r\n\r\n  navCollapse = (action) => {\r\n    const items = document.querySelectorAll(\r\n      \".main-nav__item + .main-nav__item\"\r\n    );\r\n    if (action === \"burger\") {\r\n      items.forEach((e) => e.classList.toggle(\"active\"));\r\n    } else if (action === \"normal\") {\r\n      items.forEach((e) => e.classList.remove(\"active\"));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <nav className=\"main-nav\">\r\n          <ul className=\"main-nav__list-item\">\r\n            <div\r\n              onClick={() => {\r\n                this.navCollapse(\"burger\");\r\n              }}\r\n              className=\"main-nav__burger\"\r\n            >\r\n              <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n            <li className=\"main-nav__item\">\r\n              <a className=\"main-nav__item-link\">\r\n                <img\r\n                  className=\"main-nav__item-link-img\"\r\n                  src={require(\"../../images/logo.png\")}\r\n                  alt=\"logo\"\r\n                />\r\n              </a>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeClassName=\"selected\"\r\n                className=\"main-nav__item-link\"\r\n                onClick={() => {\r\n                  this.navCollapse(\"normal\");\r\n                }}\r\n              >\r\n                Main Page\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/Creating-page\"\r\n                activeClassName=\"selected\"\r\n                className=\"main-nav__item-link main__nav_tools\"\r\n                onClick={() => {\r\n                  this.navCollapse(\"normal\");\r\n                }}\r\n              >\r\n                Tools\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/Documentation-Register\"\r\n                activeClassName=\"selected\"\r\n                className=\"main-nav__item-link\"\r\n                onClick={() => {\r\n                  this.navCollapse(\"normal\");\r\n                }}\r\n              >\r\n                Register\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/Other\"\r\n                activeClassName=\"selected\"\r\n                className=\"main-nav__item-link\"\r\n                onClick={() => {\r\n                  this.navCollapse(\"normal\");\r\n                }}\r\n              >\r\n                Other\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/LogIn\"\r\n                activeClassName=\"selected\"\r\n                className=\"main-nav__item-link\"\r\n                onClick={() => {\r\n                  this.navCollapse(\"normal\");\r\n                }}\r\n              >\r\n                <i className=\"fas fa-users\"></i>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst SelectOptions = ({ packageName, volumeNumber }) => {\r\n  return <option value={volumeNumber}>{`${volumeNumber} ${packageName}`}</option>;\r\n};\r\n\r\nexport default SelectOptions;\r\n","import React from \"react\";\r\n\r\nconst AddElement = ({ number }) => {\r\n  return (\r\n    <>\r\n      <form action=\"\" className=\"creating-page__form-element\">\r\n        <select\r\n          name=\"\"\r\n          id=\"\"\r\n          className=\"creating-page__select-element-type\"\r\n          disabled\r\n        >\r\n          <option value=\"LAY-PO\">Plan orientacyjny</option>\r\n          <option value=\"LAY-PS\">Plan sytuacyjny/legenda do PS</option>\r\n          <option value=\"GND\">Rysunek gabarytowy</option>\r\n          <option value=\"SEC\">Profil/Przekrój</option>\r\n          <option value=\"TYP\">Przekrój typowy</option>\r\n          <option value=\"DET\">Detal</option>\r\n          <option value=\"PID\">Schemat</option>\r\n        </select>\r\n        <label htmlFor=\"\">\r\n          Enter element name:\r\n          <input type=\"text\" className=\"creating-page__\" disabled />\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          Enter drawing scale (If element have a scale):\r\n          <input type=\"text\" disabled />\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddElement;\r\n","import React, { Component } from \"react\";\r\nimport SelectOptions from \"../components/creatingPage/SelectOptions\";\r\nimport AddElements from \"../components/creatingPage/AddElements\";\r\n\r\nclass CreatingPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      choosenPackage: \"\",\r\n      choosenRevision: \"\",\r\n      optionElements: [{ packageName: \"\", volumeNumber: \"\" }],\r\n      addedElements: [{ elementType: \"\", elementName: \"\", elementScale: \"\" }],\r\n    };\r\n    this.getSelectOptions = this.getSelectOptions.bind(this);\r\n  }\r\n\r\n  createOptions = (tab) => {\r\n    const elements = tab.map((e, index) => (\r\n      <SelectOptions\r\n        packageName={e.packageName}\r\n        volumeNumber={e.volumeNumber}\r\n        value={e}\r\n        key={index}\r\n      ></SelectOptions>\r\n    ));\r\n    return elements;\r\n  };\r\n\r\n  handlePageForm = (e) => {\r\n    if (e.target.name === \"packageName\") {\r\n      this.setState({\r\n        choosenPackage: e.target.value,\r\n      });\r\n    } else if (e.target.name === \"revision\") {\r\n      this.setState({\r\n        choosenRevision: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitPageForm = (e) => {\r\n    const rev = this.state.choosenRevision;\r\n    const vol = this.state.choosenPackage;\r\n    e.preventDefault();\r\n    this.setState({\r\n      choosenPackage: \"\",\r\n      choosenRevision: \"\",\r\n    });\r\n    fetch(`http://localhost:9000/creatingPages/sendPageValues/${vol}/${rev}`, {\r\n      method: \"POST\",\r\n    })\r\n      .then((e) => e.json())\r\n      .then((number) => {\r\n        window.open(`http://localhost:9000/creatingPages/downloadPage`);\r\n      });\r\n  };\r\n\r\n  async getSelectOptions() {\r\n    await fetch(\"http://localhost:9000/creatingPages/namesRequest\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((e) => e.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          optionElements: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSelectOptions();\r\n    // this.forceUpdate()\r\n  }\r\n\r\n  handleAddElementButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      addedElements: prevState.addedElements.concat({\r\n        elementType: \"\",\r\n        elementName: \"\",\r\n        elementScale: \"\",\r\n      }),\r\n    }));\r\n  };\r\n\r\n  handleChangeElementTypes = () => {};\r\n\r\n  renderAddedElements = () => {\r\n    const elements = this.state.addedElements.map((e, index) => (\r\n      <AddElements key={index} number={index}></AddElements>\r\n    ));\r\n    return elements;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"creating-page\">\r\n          <form className=\"creating-page__form\">\r\n            <label htmlFor=\"creating-page__select\">\r\n              Choose documentation:\r\n              <select\r\n                name=\"packageName\"\r\n                className=\"creating-page__select\"\r\n                value={this.state.choosenPackage}\r\n                onChange={(e) => {\r\n                  this.handlePageForm(e);\r\n                }}\r\n              >\r\n                {this.createOptions(this.state.optionElements)}\r\n              </select>\r\n            </label>\r\n            <label\r\n              htmlFor=\"creating-page__revision\"\r\n              className=\"creating-page__revision_label\"\r\n            >\r\n              Set revision:\r\n              <input\r\n                type=\"text\"\r\n                name=\"revision\"\r\n                className=\"creating-page__revision\"\r\n                value={this.state.choosenRevision}\r\n                onChange={(e) => {\r\n                  this.handlePageForm(e);\r\n                }}\r\n              />\r\n            </label>\r\n            {this.renderAddedElements()}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary my-2 disabled\"\r\n              onClick={(e) => {\r\n                // this.handleAddElementButton(e);\r\n              }}\r\n            >\r\n              Add element!\r\n            </button>\r\n            <button\r\n              href=\"a\"\r\n              target=\"_blank\"\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              onClick={(e) => {\r\n                this.submitPageForm(e);\r\n              }}\r\n            >\r\n              Download!\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatingPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FilterComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  scrollElement = (filterPanel) => {\r\n    document.addEventListener(\"scroll\", () => {\r\n      if (window.pageYOffset > 100) {\r\n        filterPanel.classList.add(\"documentation-register__filter--scrolled\");\r\n      } else if (window.pageYOffset < 100) {\r\n        filterPanel.classList.remove(\r\n          \"documentation-register__filter--scrolled\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const filterPanel = document.querySelector(\r\n      \".documentation-register__filter\"\r\n    );\r\n    this.scrollElement(filterPanel);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"documentation-register__filter\">\r\n        <div className=\"documentation-register__filter-search-name\">\r\n          <label htmlFor=\"filter-name\">\r\n            Search by name:{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              id=\"filter-name\"\r\n              onChange={(e) => {\r\n                this.props.inputHandler(e);\r\n              }}\r\n              value={this.props.text}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"documentation-register__filter-search-date\">\r\n          <label htmlFor=\"filter-date\">\r\n            Search by date:{\" \"}\r\n            <input\r\n              type=\"date\"\r\n              id=\"filter-date\"\r\n              onChange={(e) => {\r\n                this.props.inputHandler(e);\r\n              }}\r\n              value={this.props.date}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button\r\n          className=\"documentation-register__filter-clear-button btn btn-info\"\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            this.props.inputHandler(e);\r\n          }}\r\n        >\r\n          Clear results\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterComponent;\r\n","import React from \"react\";\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  BrowserRouter as Router,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\n\r\nconst TransmittalPopup = (props) => {\r\n  const { number, paperDate, eleDate, revision, status } = props.info;\r\n  return (\r\n    <>\r\n      <div className=\"documentation-register__transmittal-popup\">\r\n        <NavLink\r\n          to=\"/Documentation-Register\"\r\n          className=\"documentation-register__transmittal-popup-background\"\r\n        >\r\n          <div></div>\r\n        </NavLink>\r\n        <div className=\"documentation-register__transmittal-popup-wrap\">\r\n          <NavLink\r\n            to=\"/Documentation-Register\"\r\n            className=\"documentation-register__transmittal-popup-close\"\r\n          >\r\n            <div>x</div>\r\n          </NavLink>\r\n          <div className=\"documentation-register__transmittal-popup-wrap-small\">\r\n            <h1 className=\"documentation-register__transmittal-popup-number\">\r\n              {number === \"\" ? \"none\" : number}\r\n            </h1>\r\n            <div className=\"documentation-register__transmittal-popup-eledate\">{`Electronic submit date: ${\r\n              eleDate === \"\" ? \"none\" : eleDate.split(\"T\")[0]\r\n            }`}</div>\r\n            <div className=\"documentation-register__transmittal-popup-paperdate\">{`Paper submit date: ${\r\n              paperDate === \"-\" || paperDate === \"\"\r\n                ? \"none\"\r\n                : paperDate.split(\"T\")[0]\r\n            }`}</div>\r\n            <div className=\"documentation-register__transmittal-popup-revision\">\r\n              {`Revision: ${revision}`}\r\n            </div>\r\n            <div className=\"documentation-register__transmittal-popup-status\">\r\n              {`Acceptation status: ${\r\n                status === null || status === \"\" ? \"none\" : status\r\n              }`}\r\n            </div>\r\n          </div>\r\n          <div className=\"documentation-register__transmittal-popup-chat\">\r\n            <div className=\"documentation-register__transmittal-popup-chat-window\"></div>\r\n            <form\r\n              action=\"submit\"\r\n              className=\"documentation-register__transmittal-popup-chat-form\"\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                id=\"chat-input\"\r\n                className=\"documentation-register__transmittal-popup-chat-input\"\r\n                placeholder=\"Chat about submision\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"documentation-register__transmittal-popup-chat-send btn btn-primary\"\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransmittalPopup;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  BrowserRouter as Router,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport TransmittalPopup from \"./TransmittalPopup\";\r\n\r\nclass TransmittalElement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <NavLink\r\n          to={`/Documentation-Register/${this.props.number}`}\r\n          className=\"documentation-register__link-transmittal\"\r\n        >\r\n          <div className=\"documentation-register__transmittal\">\r\n            <div className=\"documentation-register__transmittal-element documentation-register__transmittal-number\">\r\n              {this.props.number}\r\n            </div>\r\n            <div className=\"documentation-register__transmittal-element documentation-register__transmittal-ele-date\">\r\n              {typeof this.props.eleDate === \"string\"\r\n                ? `${this.props.eleDate.split(\"T\")[0]}`\r\n                : this.props.eleDate}\r\n            </div>\r\n            <div className=\"documentation-register__transmittal-element documentation-register__transmittal-paper-date\">\r\n              {typeof this.props.paperDate === \"string\"\r\n                ? `${this.props.paperDate.split(\"T\")[0]}`\r\n                : this.props.paperDate}\r\n            </div>\r\n            <div className=\"documentation-register__transmittal-element documentation-register__transmittal-revision\">\r\n              {this.props.revision}\r\n            </div>\r\n            <div className=\"documentation-register__transmittal-element documentation-register__transmittal-status\">\r\n              {this.props.status}\r\n            </div>\r\n            <Route\r\n              path={\r\n                this.props.number === \"\"\r\n                  ? \"/Documentation-Register/none\"\r\n                  : `/Documentation-Register/${this.props.number}`\r\n              }\r\n              exact\r\n            >\r\n              <TransmittalPopup info={this.props}></TransmittalPopup>\r\n            </Route>\r\n          </div>\r\n        </NavLink>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransmittalElement;\r\n","import React from \"react\";\r\n\r\nconst DocumentationNumber = ({ code, name }) => {\r\n  return (\r\n    <div className=\"documentation-register__code\">\r\n      <div className=\"documentation-register__code-name\">{name}</div>\r\n      <div className=\"documentation-register__code-code\">{code}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentationNumber;\r\n","import React, { Component } from \"react\";\r\nimport TransmittalElement from \"./TransmittalElement\";\r\nimport DocumentationNumber from \"./DocumentationNumber\";\r\n\r\nclass DocumentationRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  docNameAndCode = (row, actionType) => {\r\n    if (actionType === \"code\") {\r\n      const code = `${row[5]}-${row[6]}-${row[7]}-${row[8]}-${row[9]}-${row[10]}-${row[11]}-${row[12]}`;\r\n      return code;\r\n    } else if (actionType === \"name\") {\r\n      const name = `${row[1]} ${row[2]}`;\r\n      return name;\r\n    }\r\n  };\r\n\r\n  makeTransmittals = (row) => {\r\n    const rowNew = Array.from(row).splice(13);\r\n    const transmittal = rowNew.map((e, index) => {\r\n      if (index % 5 === 0) {\r\n        if (e === null) {\r\n          return (\r\n            <TransmittalElement\r\n              key={index}\r\n              number={\"\"}\r\n              eleDate={\"\"}\r\n              paperDate={\"\"}\r\n              revision={\"\"}\r\n              status={\"\"}\r\n            ></TransmittalElement>\r\n          );\r\n        } else {\r\n          return (\r\n            <TransmittalElement\r\n              key={index}\r\n              number={e}\r\n              eleDate={rowNew[index + 1]}\r\n              paperDate={rowNew[index + 2]}\r\n              revision={rowNew[index + 3]}\r\n              status={rowNew[index + 4]}\r\n            ></TransmittalElement>\r\n          );\r\n        }\r\n      }\r\n    });\r\n    return transmittal;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"documentation-register__row\">\r\n        <DocumentationNumber\r\n          name={this.docNameAndCode(this.props.row, \"name\")}\r\n          code={this.docNameAndCode(this.props.row, \"code\")}\r\n        ></DocumentationNumber>\r\n        {this.makeTransmittals(this.props.row)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentationRow;\r\n","import React, { Component } from \"react\";\r\nimport DocumentationRow from \"./DocumentationRow\";\r\n\r\nclass DocumentationWrap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  createRowElements = (elements) => {\r\n    const elementTab = elements.map((e, index) => {\r\n      if (e[5] === \"P\") {\r\n        let all = \"\";\r\n        e.map((e, index) => {\r\n          if (\r\n            index === 5 ||\r\n            index === 6 ||\r\n            index === 7 ||\r\n            index === 8 ||\r\n            index === 9 ||\r\n            index === 10 ||\r\n            index === 11 ||\r\n            index === 12\r\n          ) {\r\n            all = all + \"-\" + e;\r\n          } else {\r\n            all = all + e;\r\n          }\r\n        });\r\n        if (\r\n          all.toUpperCase().includes(this.props.filterName.toUpperCase()) &&\r\n          all.toUpperCase().includes(this.props.filterDate.toUpperCase())\r\n        ) {\r\n          return <DocumentationRow key={index} row={e}></DocumentationRow>;\r\n        }\r\n      }\r\n    });\r\n    return elementTab;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"documentation-register__wrap\">\r\n        {this.createRowElements(this.props.elements)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentationWrap;\r\n","import React, { Component } from \"react\";\r\nimport FiletrComponent from \"../components/documentationRegister/FilterComponent\";\r\nimport DocumentationWrap from \"../components/documentationRegister/DocumentationWrap\";\r\n\r\nclass DocumentationRegister extends Component {\r\n  state = {\r\n    documentationAll: [],\r\n    filterName: \"\",\r\n    filterDate: \"\",\r\n  };\r\n\r\n  async getDocumentationData() {\r\n    await fetch(\r\n      \"http://localhost:9000/documentationRegister/getAllDocumentation\"\r\n    )\r\n      .then((e) => e.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          documentationAll: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDocumentationData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      documentationAll: [],\r\n      filterName: \"\",\r\n      filterDate: \"\",\r\n    });\r\n  }\r\n\r\n  handleInputsFilter = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.type === \"text\") {\r\n      this.setState({\r\n        filterName: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"date\") {\r\n      this.setState({\r\n        filterDate: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"button\") {\r\n      this.setState({\r\n        filterName: \"\",\r\n        filterDate: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"documentation-register\">\r\n          <FiletrComponent\r\n            inputHandler={this.handleInputsFilter}\r\n            text={this.state.filterName}\r\n            date={this.state.filterDate}\r\n          ></FiletrComponent>\r\n          <DocumentationWrap\r\n            elements={this.state.documentationAll}\r\n            filterName={this.state.filterName}\r\n            filterDate={this.state.filterDate}\r\n          ></DocumentationWrap>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentationRegister;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./components/nav/Nav\";\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  BrowserRouter as Router,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport CreatingPage from \"./pages/CreatingPage\";\r\nimport DocumentationRegister from \"./pages/DocumentationRegister\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <BrowserRouter>\r\n          <div className=\"wrap\">\r\n            <div className=\"navigation\">\r\n              <Nav></Nav>\r\n            </div>\r\n            <div className=\"main\">\r\n              <Route path=\"/Creating-page\">\r\n                <CreatingPage></CreatingPage>\r\n              </Route>\r\n              <Route path=\"/Documentation-Register\">\r\n                <DocumentationRegister></DocumentationRegister>\r\n              </Route>\r\n            </div>\r\n          </div>\r\n        </BrowserRouter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./sass/Main.scss\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}